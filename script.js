// –ü—Ä–æ—Å—Ç–∞—è –∑–º–µ–π–∫–∞ –Ω–∞ JavaScript —Å –±–∞–Ω–Ω–µ—Ä–æ–º –ø–æ—Å–ª–µ 15 –æ—á–∫–æ–≤
const canvas = document.getElementById('gameCanvas'); // –ü–æ–ª—É—á–∞–µ–º —Ö–æ–ª—Å—Ç
const ctx = canvas.getContext('2d'); // –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∏—Å–æ–≤–∞–Ω–∏—è
const box = 20; // –†–∞–∑–º–µ—Ä –æ–¥–Ω–æ–≥–æ –±–ª–æ–∫–∞ –∑–º–µ–π–∫–∏
let snake = [{ x: 10 * box, y: 10 * box }]; // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∑–º–µ–π–∫–∏
let direction = 'RIGHT'; // –ù–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è
let food = { x: Math.floor(Math.random() * 20) * box, y: Math.floor(Math.random() * 20) * box }; // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –µ–¥—ã
let score = 0; // –û—á–∫–∏

// –§–∏–∫—Å–∏—Ä—É–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
canvas.style.position = 'fixed';
canvas.style.top = '50%';
canvas.style.left = '50%';
canvas.style.transform = 'translate(-50%, -50%)';

// –°–æ–∑–¥–∞—ë–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á—ë—Ç–∞
const scoreDisplay = document.createElement('div');
scoreDisplay.style.position = 'fixed';
scoreDisplay.style.top = '10px';
scoreDisplay.style.left = '50%';
scoreDisplay.style.transform = 'translateX(-50%)';
scoreDisplay.style.color = 'white';
scoreDisplay.style.fontSize = '20px';
scoreDisplay.style.fontFamily = 'Arial, sans-serif';
document.body.appendChild(scoreDisplay);

// –°–æ–∑–¥–∞—ë–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
const controls = document.createElement('div');
controls.style.position = 'fixed';
controls.style.bottom = '10px';
controls.style.left = '50%';
controls.style.transform = 'translateX(-50%)';
controls.style.display = 'grid';
controls.style.gridTemplateColumns = 'repeat(3, 50px)';
controls.style.gridTemplateRows = 'repeat(2, 50px)';
controls.style.gap = '5px';
document.body.appendChild(controls);

const directions = { UP: '‚¨ÜÔ∏è', LEFT: '‚¨ÖÔ∏è', DOWN: '‚¨áÔ∏è', RIGHT: '‚û°Ô∏è' };
const buttons = {};

Object.keys(directions).forEach((dir) => {
    const btn = document.createElement('button');
    btn.textContent = directions[dir];
    btn.style.fontSize = '24px';
    btn.style.width = '50px';
    btn.style.height = '50px';
    btn.style.borderRadius = '10px';
    btn.style.border = 'none';
    btn.style.background = 'lightgray';
    btn.addEventListener('touchstart', () => {
        if ((dir === 'LEFT' && direction !== 'RIGHT') ||
            (dir === 'RIGHT' && direction !== 'LEFT') ||
            (dir === 'UP' && direction !== 'DOWN') ||
            (dir === 'DOWN' && direction !== 'UP')) {
            direction = dir;
        }
    });
    buttons[dir] = btn;
    controls.appendChild(btn);
});

controls.children[0].style.gridColumn = '2'; // –í–≤–µ—Ä—Ö –≤ —Ü–µ–Ω—Ç—Ä–µ
controls.children[1].style.gridColumn = '1'; // –í–ª–µ–≤–æ —Å–ª–µ–≤–∞
controls.children[2].style.gridColumn = '2'; // –í–Ω–∏–∑ –≤ —Ü–µ–Ω—Ç—Ä–µ
controls.children[3].style.gridColumn = '3'; // –í–ø—Ä–∞–≤–æ —Å–ø—Ä–∞–≤–∞

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function changeDirection(event) {
    if (event.keyCode == 37 && direction !== 'RIGHT') direction = 'LEFT';
    else if (event.keyCode == 38 && direction !== 'DOWN') direction = 'UP';
    else if (event.keyCode == 39 && direction !== 'LEFT') direction = 'RIGHT';
    else if (event.keyCode == 40 && direction !== 'UP') direction = 'DOWN';
}
document.addEventListener('keydown', changeDirection);

// –≠–∫—Ä–∞–Ω —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
const welcomeScreen = document.createElement('div');
welcomeScreen.style.position = 'fixed';
welcomeScreen.style.top = '0';
welcomeScreen.style.left = '0';
welcomeScreen.style.width = '100%';
welcomeScreen.style.height = '100%';
welcomeScreen.style.background = 'lightblue';
welcomeScreen.style.display = 'flex';
welcomeScreen.style.flexDirection = 'column';
welcomeScreen.style.justifyContent = 'center';
welcomeScreen.style.alignItems = 'center';
welcomeScreen.style.textAlign = 'center';
welcomeScreen.style.fontSize = '24px';
welcomeScreen.style.color = 'white';
welcomeScreen.innerHTML = `
    –ü—Ä–∏–≤–µ—Ç. –û—Ç –º–µ–Ω—è –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥–µ—Ç –±–∞–Ω–∞–ª—å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–æ–∫. <br>
    –ü—Ä–∏–¥–µ—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ—Å—Ç—Ä–∞–¥–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞–±—Ä–∞—Ç—å 15 –æ—á–∫–æ–≤ –≤ —ç—Ç–æ–π —á—É–¥–µ—Å–Ω–æ–π –∏ –∫—Ä–∏–≤–æ–π –∏–≥—Ä–µ.
    <br><br>
    <button id="startBtn" style="padding: 10px 20px; font-size: 18px; background-color: #fff; color: #000; border: none; border-radius: 5px; cursor: pointer;">–ù–∞—á–∞—Ç—å –∏–≥—Ä—É</button>
`;
document.body.appendChild(welcomeScreen);

document.getElementById('startBtn').addEventListener('click', function () {
    welcomeScreen.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω
    drawGame(); // –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
});

function drawGame() {
    ctx.fillStyle = 'black'; // –ó–∞–¥–Ω–∏–π —Ñ–æ–Ω
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—á—ë—Ç
    scoreDisplay.textContent = `–û—á–∫–∏: ${score}, –∏–∑ 15`;
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∑–º–µ–π–∫–∏
    for (let i = 0; i < snake.length; i++) {
        ctx.fillStyle = (i === 0) ? 'green' : 'lime'; // –ì–æ–ª–æ–≤–∞ –∑–µ–ª—ë–Ω–∞—è, —Ç–µ–ª–æ —Å–≤–µ—Ç–ª–æ-–∑–µ–ª—ë–Ω–æ–µ
        ctx.fillRect(snake[i].x, snake[i].y, box, box);
    }
    
    // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –µ–¥—ã
    ctx.fillStyle = 'red';
    ctx.fillRect(food.x, food.y, box, box);
    
    let snakeX = snake[0].x;
    let snakeY = snake[0].y;
    
    // –î–≤–∏–≥–∞–µ–º –≥–æ–ª–æ–≤—É –∑–º–µ–π–∫–∏
    if (direction == 'LEFT') snakeX -= box;
    if (direction == 'UP') snakeY -= box;
    if (direction == 'RIGHT') snakeX += box;
    if (direction == 'DOWN') snakeY += box;
    
    // –ï—Å–ª–∏ –∑–º–µ–π–∫–∞ —Å—ä–µ–ª–∞ –µ–¥—É, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –µ–¥—É
    if (snakeX == food.x && snakeY == food.y) {
        score++;
        food = { x: Math.floor(Math.random() * 20) * box, y: Math.floor(Math.random() * 20) * box };
    } else {
        snake.pop(); // –£–±–∏—Ä–∞–µ–º —Ö–≤–æ—Å—Ç, –µ—Å–ª–∏ –Ω–µ —Å—ä–µ–ª–∞ –µ–¥—É
    }
    
    // –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–º–µ–π–∫–∏ —á–µ—Ä–µ–∑ –≥—Ä–∞–Ω–∏—Ü—ã —ç–∫—Ä–∞–Ω–∞
    if (snakeX < 0) snakeX = canvas.width - box;
    if (snakeX >= canvas.width) snakeX = 0;
    if (snakeY < 0) snakeY = canvas.height - box;
    if (snakeY >= canvas.height) snakeY = 0;
    
    let newHead = { x: snakeX, y: snakeY };
    
    if (score >= 15) {
        showBanner();
        return;
    }
    
    snake.unshift(newHead);
    setTimeout(drawGame, 100);
}

function showBanner() {
    const banner = document.createElement('div');
    banner.style.position = 'fixed';
    banner.style.top = '0';
    banner.style.left = '0';
    banner.style.width = '100%';
    banner.style.height = '100%';
    banner.style.background = 'pink';
    banner.style.display = 'flex';
    banner.style.justifyContent = 'center';
    banner.style.alignItems = 'center';
    banner.style.fontSize = '25px';
    banner.style.color = 'white';
    banner.innerHTML = `
        –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å 14 —Ñ–µ–≤—Ä–∞–ª—è! üíñ<br>
        –Ø –ª—é–±–ª—é —Ç–µ–±—è! –°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ç—ã –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏!<br>
        –î–∞–ª–µ–µ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–ª–µ–∂–∫—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é.<br>
        <br><br>
        <button id="restartBtn" style="padding: 10px 20px; font-size: 18px; background-color: #fff; color: #000; border: none; border-radius: 5px; cursor: pointer;">–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–≥—Ä—É</button>
    `;
    document.body.appendChild(banner);

    document.getElementById('restartBtn').addEventListener('click', function () {
        banner.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –±–∞–Ω–Ω–µ—Ä
        score = 0; // –°–±—Ä–æ—Å–∏—Ç—å –æ—á–∫–∏
        snake = [{ x: 10 * box, y: 10 * box }]; // –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–º–µ–π–∫—É
        food = { x: Math.floor(Math.random() * 20) * box, y: Math.floor(Math.random() * 20) * box }; // –ù–æ–≤–∞—è –µ–¥–∞
        direction = 'RIGHT'; // –ù–∞—á–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        drawGame(); // –ù–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ
    });
}
